def straightforward_divide_and_conquer_matrix_multiplication(A, B, C, n):
    if n == 1:
        C[0][0] = A[0][0] * B[0][0]
        return

    m = n // 2
    A11, A12, A21, A22 = [], [], [], []
    B11, B12, B21, B22 = [], [], [], []
    C11, C12, C21, C22 = [], [], [], []
    for i in range(m):
        A11.append(A[i][:m])
        A12.append(A[i][m:])
        A21.append(A[i+m][:m])
        A22.append(A[i+m][m:])
        B11.append(B[i][:m])
        B12.append(B[i][m:])
        B21.append(B[i+m][:m])
        B22.append(B[i+m][m:])
        C11.append([0] * m)
        C12.append([0] * m)
        C21.append([0] * m)
        C22.append([0] * m)

    straightforward_divide_and_conquer_matrix_multiplication(A11, B11, C11, m)
    straightforward_divide_and_conquer_matrix_multiplication(A12, B21, C11, m)
    straightforward_divide_and_conquer_matrix_multiplication(A11, B12, C12, m)
    straightforward_divide_and_conquer_matrix_multiplication(A12, B22, C12, m)
    straightforward_divide_and_conquer_matrix_multiplication(A21, B11, C21, m)
    straightforward_divide_and_conquer_matrix_multiplication(A22, B21, C21, m)
    straightforward_divide_and_conquer_matrix_multiplication(A21, B12, C22, m)
    straightforward_divide_and_conquer_matrix_multiplication(A22, B22, C22, m)

    for i in range(m):
        C[i][:m] = C11[i]
        C[i][m:] = C12[i]
        C[i+m][:m] = C21[i]
        C[i+m][m:] = C22[i]
